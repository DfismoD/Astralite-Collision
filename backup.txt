import pygame, random
from meteorite import MeteoriteFallEvent

class Game:
    def __init__(self, screen="" ,screen_size=(1920, 1080)):
        self.screen = screen
        self.screen_size = screen_size

        self.meteorite_event = MeteoriteFallEvent()

        pygame.display.set_caption("Astralite Collision: Game")

        # Initialisation des assets
        self.background = pygame.image.load("assets/background.png")
        self.background = pygame.transform.scale(self.background, self.screen_size)

        self.ship_astralite = pygame.image.load("assets/ship.png")
        self.ship_astralite = pygame.transform.scale(self.ship_astralite, (self.screen_size[0]/10, self.screen_size[0]/10))

        self.laser_astralite = pygame.image.load("assets/astralite_laser.png")

        self.meteorite_astralite_1 = pygame.image.load("assets/meteorite_astralite_1.png")
        self.meteorite_astralite_2 = pygame.image.load("assets/meteorite_astralite_2.png")
        self.meteorite_astralite_3 = pygame.image.load("assets/meteorite_astralite_3.png")
        self.meteorite_astralite_4 = pygame.image.load("assets/meteorite_astralite_4.png")

    def font(self, size):
        return pygame.font.Font("assets/font.ttf", size)


    # class Ship:
    #     def __init__(self, x, y, health=100):
    #         self.x = x
    #         self.y = y
    #         self.health = health
    #         self.ship_img = None
    #         self.laser_img = None
    #         self.lasers = []
    #         self.cool_down_counter = 0
        
    #     def draw(self, window):
    #         window.blit(self.ship_img, (self.x, self.y))

    #     def get_width(self):
    #         return self.ship_img.get_width()
        
    #     def get_height(self):
    #         return self.ship_img.get_height()
    
    # class Player(Ship):
    #     def __init__(self, x, y, health=100):
    #         super().__init__(x, y, health)
    #         self.game = Game()
    #         self.ship_img = pygame.image.load("assets/ship.png")
    #         self.ship_img = pygame.transform.scale(self.ship_img, (self.screen_size[0]//10, self.screen_size[0]//10))
    #         self.mask = pygame.mask.from_surface(self.ship_img)
    #         self.max_health = health
    
    # class Enemy(Ship):
    #     def __init__(self, x, y, health=100):
    #         super().__init__(x, y, health)
    #         self.game = Game()
    #         self.meteorite = {
    #             "meteorite_1": (self.game.meteorite_astralite_1),
    #             "meteorite_2": (self.game.meteorite_astralite_2),
    #             "meteorite_3": (self.game.meteorite_astralite_3),
    #             "meteorite_4": (self.game.meteorite_astralite_4)
    #         }
    #         # self.mask = pygame.mask.from_surface(self.ship_img)

    #     def move(self, vel):
    #         self.y += vel


    
    def handle_input(self):
        keys_pressed = pygame.key.get_pressed()

        if keys_pressed[pygame.K_q] and self.player.x - self.player_vel + 15 > 0:
            self.player.x -= self.player_vel
        if keys_pressed[pygame.K_d] and self.player.x + self.player_vel + self.player.get_width() < self.screen_size[0]:
            self.player.x += self.player_vel
        if keys_pressed[pygame.K_z] and self.player.y > 0:
            self.player.y -= self.player_vel
        if keys_pressed[pygame.K_s] and self.player.y + self.player_vel + self.player.get_height() < self.screen_size[1]:
            self.player.y += self.player_vel


    def main(self):
        run = True
        self.level = 0
        self.lives = 3

        self.player_vel = 25

        self.enemies = []
        self.wave_length = 5
        self.enemy_vel = 1


        # self.player = self.Player(300, 650)

        clock = pygame.time.Clock()

        while run:

            self.screen.blit(self.background, (0, 0))

            self.meteorite_event.update_bar(self.screen)

            # if len(self.enemies) == 0:
            #     self.level += 1
            #     self.wave_length += 5

            #     for i in range(self.wave_length):
            #         enemy =  self.Enemy(random.randrange(50, self.screen_size[0] - 100), random.randrange(-1500, - 100), random.choice(["meteorite_astralite_1", "meteorite_astralite_2", "meteorite_astralite_3", "meteorite_astralite_4"]))
            #         self.enemies.append(enemy)
                
            #     for enemy in self.enemies:
            #         enemy.move(self.enemy_vel)

            text_lives = self.font(75).render(f"Vies: {self.lives}", 1, "WHITE")
            text_level = self.font(75).render(f"Niveau: {self.level}", 1, "WHITE")

            self.screen.blit(text_level, (10, 0))
            self.screen.blit(text_lives, (self.screen_size[0] - text_lives.get_width() - 10, 0))

            # for enemy in self.enemies:
            #     enemy.draw(self.screen)

            # self.handle_input()
            # self.player.draw(self.screen)

            pygame.display.flip()

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    self.run = False
                    pygame.quit()

            clock.tick(60)

            pygame.display.update()